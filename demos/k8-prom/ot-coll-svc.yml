---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      prometheus/kubestats:
        config:
          scrape_configs:
            - job_name: 'kube-state-metrics'
              scrape_interval: 120s
              static_configs:
                - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
                - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8881']
    processors:
      batch:
      memory_limiter:
        ballast_size_mib: 683
        limit_mib: 1500
        spike_limit_mib: 512
        check_interval: 5s
    extensions:
      health_check: {}
      zpages: {}
    exporters:
      logging:
        loglevel: debug
      prometheus/self:
        endpoint: "0.0.0.0:8889"
      otlphttp/ce:
        endpoint: https://customer1.saas.appd-test.com/ce
        insecure: true
    service:
      extensions: [health_check, zpages]
      pipelines:
        metrics:
          receivers: [prometheus/kubestats]
          processors: [memory_limiter, batch]
          exporters: [prometheus/self, otlphttp/ce]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  minReadySeconds: 5
  progressDeadlineSeconds: 120
  replicas: 1 #TODO - adjust this to your own requirements
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
        - command:
            - "/otelcontribcol"
            - "--config=/conf/otel-collector-config.yaml"
            - "--mem-ballast-size-mib=683"
          image: otel/opentelemetry-collector-contrib:0.18.0
          name: otel-collector
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 55679 # Default endpoint for ZPages.
            - containerPort: 55680 # Default endpoint for OpenTelemetry receiver.
            - containerPort: 8888  # Default endpoint for querying metrics.
            - containerPort: 8889  # prometheus exporter endpoint
          volumeMounts:
            - name: otel-collector-config-vol
              mountPath: /conf
          #        - name: otel-collector-secrets
          #          mountPath: /secrets
          livenessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
          readinessProbe:
            httpGet:
              path: /
              port: 13133 # Health Check extension default port.
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
---

apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
    - name: otlp # Default endpoint for OpenTelemetry receiver.
      port: 55680
      protocol: TCP
      targetPort: 55680
    - name: metrics # Default endpoint for querying metrics.
      port: 8888
    - name: prometheus
      port: 8889
  selector:
    component: otel-collector
---
