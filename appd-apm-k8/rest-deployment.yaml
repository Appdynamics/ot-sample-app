apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest
  labels:
    app: rest
    name: rest
    keel.sh/policy: force
    keel.sh/trigger: poll
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest
  strategy:
    type: Recreate
  template:
    metadata:
      name: rest
      labels:
        app: rest
    spec:
      containers:
      - env:
        - name: APPDYNAMICS_CONTAINER_ENABLED
          value: "true"
        - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: accesskey
              name: mysecret
        - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
          valueFrom:
            secretKeyRef:
              key: accountname
              name: mysecret
        - name: ROLE
          value: rest
        - name: APPDYNAMICS_AGENT_NODE_NAME
          value: Authentication-Service
        - name: APPDYNAMICS_AGENT_TIER_NAME
          value: Authentication-Service
        - name: APPD_ANALYTICS_MONITOR
          value: "false"
        - name: APPD_DOCKER_VISIBILITY
          value: "false"
        - name: MACHINE_AGENT_PROPERTIES
          value: "-Dappdynamics.sim.enabled=false -Dappdynamics.docker.enabled=false"
        - name: APPDYNAMICS_NETVIZ_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        image: dtr.corp.appdynamics.com/pavan.krishna/adcapital-tomcat:latest
        envFrom:
          - configMapRef:
              name: env-map
        imagePullPolicy: Always
        name: rest
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /hostroot
          name: hostroot
          readOnly: true
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /project
          name: project
        - mountPath: /appdynamics
          name: appdynamics
      restartPolicy: Always
      volumes:
      - name: hostroot
        hostPath:
          path: /
          type: Directory
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: project
      - name: appdynamics
        hostPath:
          path: /Users/pavankri/Work/ot-sample-app/appdynamics
          type: Directory
      initContainers:
        - image: appddemo/adcapital-project
          name: provider
          volumeMounts:
          - mountPath: /project
            name: project
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: rest
  name: rest
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    app: rest
status:
  loadBalancer: {}
