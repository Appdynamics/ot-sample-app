syntax = "proto3";

// NOTE: This proto is experimental and is subject to change at this point.
// Please do not use it at the moment.

package otappd.proto.appdynamics.v1;

import "protos/trace/v1/trace.proto";

option java_multiple_files = true;
option java_package = "io.otappd.proto.appdynamics.v1";
option java_outer_classname = "AppDServiceProto";
option go_package = "github.com/Appdynamics/opentelemetry-ingest/gen/go/pb/appdynamics/v1";


// Service that can be used to push spans between one Application instrumented with
// OpenTelemetry and an collector, or between an collector and a central collector (in this
// case spans are sent/received to/from multiple Applications).
service SpanHandler {
    // For performance reasons, it is recommended to keep this RPC
    // alive for the entire life of the application.
    rpc handleSpans(SpansRequest) returns (SpansResponse) {}
}

message SpansRequest {
    // An array of ResourceSpans.
    // For data coming from a single resource this array will typically contain one
    // element. Intermediary nodes (such as OpenTelemetry Collector) that receive
    // data from multiple origins typically batch the data before forwarding further and
    // in that case this array will contain multiple elements.
    repeated otappd.proto.trace.v1.ResourceSpans resource_spans = 1;
}

message SpansResponse {
}